# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class AnalysisRequest(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, customer_text: str=None, language_code: str=None):
        """
        AnalysisRequest - a model defined in Swagger

        :param customer_text: The customer_text of this AnalysisRequest.
        :type customer_text: str
        :param language_code: The language_code of this AnalysisRequest.
        :type language_code: str
        """
        self.swagger_types = {
            'customer_text': str,
            'language_code': str
        }

        self.attribute_map = {
            'customer_text': 'customer-text',
            'language_code': 'language-code'
        }

        self._customer_text = customer_text
        self._language_code = language_code

    @classmethod
    def from_dict(cls, dikt) -> 'AnalysisRequest':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnalysisRequest of this AnalysisRequest.
        :rtype: AnalysisRequest
        """
        return deserialize_model(dikt, cls)

    @property
    def customer_text(self) -> str:
        """
        Gets the customer_text of this AnalysisRequest.
        The text that the customer has sent to customer service

        :return: The customer_text of this AnalysisRequest.
        :rtype: str
        """
        return self._customer_text

    @customer_text.setter
    def customer_text(self, customer_text: str):
        """
        Sets the customer_text of this AnalysisRequest.
        The text that the customer has sent to customer service

        :param customer_text: The customer_text of this AnalysisRequest.
        :type customer_text: str
        """

        self._customer_text = customer_text

    @property
    def language_code(self) -> str:
        """
        Gets the language_code of this AnalysisRequest.
        The language code of the customer-text in ISO 639-1 format (2 letter code)

        :return: The language_code of this AnalysisRequest.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code: str):
        """
        Sets the language_code of this AnalysisRequest.
        The language code of the customer-text in ISO 639-1 format (2 letter code)

        :param language_code: The language_code of this AnalysisRequest.
        :type language_code: str
        """

        self._language_code = language_code

